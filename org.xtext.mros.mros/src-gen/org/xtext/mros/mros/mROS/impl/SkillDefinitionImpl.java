/**
 * generated by Xtext 2.21.0
 */
package org.xtext.mros.mros.mROS.impl;

import java.lang.String;

import java.util.Collection;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import org.eclipse.emf.ecore.util.EObjectContainmentEList;
import org.eclipse.emf.ecore.util.InternalEList;

import org.xtext.mros.mros.mROS.MROSPackage;
import org.xtext.mros.mros.mROS.ParameterType;
import org.xtext.mros.mros.mROS.QualityAttribute;
import org.xtext.mros.mros.mROS.ResultType;
import org.xtext.mros.mros.mROS.SkillDefinition;
import org.xtext.mros.mros.mROS.SkillRealization;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Skill Definition</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link org.xtext.mros.mros.mROS.impl.SkillDefinitionImpl#getName <em>Name</em>}</li>
 *   <li>{@link org.xtext.mros.mros.mROS.impl.SkillDefinitionImpl#getListqa <em>Listqa</em>}</li>
 *   <li>{@link org.xtext.mros.mros.mROS.impl.SkillDefinitionImpl#getP <em>P</em>}</li>
 *   <li>{@link org.xtext.mros.mros.mROS.impl.SkillDefinitionImpl#getResult <em>Result</em>}</li>
 *   <li>{@link org.xtext.mros.mros.mROS.impl.SkillDefinitionImpl#getRealizations <em>Realizations</em>}</li>
 * </ul>
 *
 * @generated
 */
public class SkillDefinitionImpl extends MinimalEObjectImpl.Container implements SkillDefinition
{
  /**
   * The default value of the '{@link #getName() <em>Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getName()
   * @generated
   * @ordered
   */
  protected static final String NAME_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getName() <em>Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getName()
   * @generated
   * @ordered
   */
  protected String name = NAME_EDEFAULT;

  /**
   * The cached value of the '{@link #getListqa() <em>Listqa</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getListqa()
   * @generated
   * @ordered
   */
  protected EList<QualityAttribute> listqa;

  /**
   * The cached value of the '{@link #getP() <em>P</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getP()
   * @generated
   * @ordered
   */
  protected EList<ParameterType> p;

  /**
   * The cached value of the '{@link #getResult() <em>Result</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getResult()
   * @generated
   * @ordered
   */
  protected EList<ResultType> result;

  /**
   * The cached value of the '{@link #getRealizations() <em>Realizations</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getRealizations()
   * @generated
   * @ordered
   */
  protected EList<SkillRealization> realizations;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected SkillDefinitionImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return MROSPackage.Literals.SKILL_DEFINITION;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getName()
  {
    return name;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setName(String newName)
  {
    String oldName = name;
    name = newName;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MROSPackage.SKILL_DEFINITION__NAME, oldName, name));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<QualityAttribute> getListqa()
  {
    if (listqa == null)
    {
      listqa = new EObjectContainmentEList<QualityAttribute>(QualityAttribute.class, this, MROSPackage.SKILL_DEFINITION__LISTQA);
    }
    return listqa;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<ParameterType> getP()
  {
    if (p == null)
    {
      p = new EObjectContainmentEList<ParameterType>(ParameterType.class, this, MROSPackage.SKILL_DEFINITION__P);
    }
    return p;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<ResultType> getResult()
  {
    if (result == null)
    {
      result = new EObjectContainmentEList<ResultType>(ResultType.class, this, MROSPackage.SKILL_DEFINITION__RESULT);
    }
    return result;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<SkillRealization> getRealizations()
  {
    if (realizations == null)
    {
      realizations = new EObjectContainmentEList<SkillRealization>(SkillRealization.class, this, MROSPackage.SKILL_DEFINITION__REALIZATIONS);
    }
    return realizations;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case MROSPackage.SKILL_DEFINITION__LISTQA:
        return ((InternalEList<?>)getListqa()).basicRemove(otherEnd, msgs);
      case MROSPackage.SKILL_DEFINITION__P:
        return ((InternalEList<?>)getP()).basicRemove(otherEnd, msgs);
      case MROSPackage.SKILL_DEFINITION__RESULT:
        return ((InternalEList<?>)getResult()).basicRemove(otherEnd, msgs);
      case MROSPackage.SKILL_DEFINITION__REALIZATIONS:
        return ((InternalEList<?>)getRealizations()).basicRemove(otherEnd, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case MROSPackage.SKILL_DEFINITION__NAME:
        return getName();
      case MROSPackage.SKILL_DEFINITION__LISTQA:
        return getListqa();
      case MROSPackage.SKILL_DEFINITION__P:
        return getP();
      case MROSPackage.SKILL_DEFINITION__RESULT:
        return getResult();
      case MROSPackage.SKILL_DEFINITION__REALIZATIONS:
        return getRealizations();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @SuppressWarnings("unchecked")
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case MROSPackage.SKILL_DEFINITION__NAME:
        setName((String)newValue);
        return;
      case MROSPackage.SKILL_DEFINITION__LISTQA:
        getListqa().clear();
        getListqa().addAll((Collection<? extends QualityAttribute>)newValue);
        return;
      case MROSPackage.SKILL_DEFINITION__P:
        getP().clear();
        getP().addAll((Collection<? extends ParameterType>)newValue);
        return;
      case MROSPackage.SKILL_DEFINITION__RESULT:
        getResult().clear();
        getResult().addAll((Collection<? extends ResultType>)newValue);
        return;
      case MROSPackage.SKILL_DEFINITION__REALIZATIONS:
        getRealizations().clear();
        getRealizations().addAll((Collection<? extends SkillRealization>)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case MROSPackage.SKILL_DEFINITION__NAME:
        setName(NAME_EDEFAULT);
        return;
      case MROSPackage.SKILL_DEFINITION__LISTQA:
        getListqa().clear();
        return;
      case MROSPackage.SKILL_DEFINITION__P:
        getP().clear();
        return;
      case MROSPackage.SKILL_DEFINITION__RESULT:
        getResult().clear();
        return;
      case MROSPackage.SKILL_DEFINITION__REALIZATIONS:
        getRealizations().clear();
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case MROSPackage.SKILL_DEFINITION__NAME:
        return NAME_EDEFAULT == null ? name != null : !NAME_EDEFAULT.equals(name);
      case MROSPackage.SKILL_DEFINITION__LISTQA:
        return listqa != null && !listqa.isEmpty();
      case MROSPackage.SKILL_DEFINITION__P:
        return p != null && !p.isEmpty();
      case MROSPackage.SKILL_DEFINITION__RESULT:
        return result != null && !result.isEmpty();
      case MROSPackage.SKILL_DEFINITION__REALIZATIONS:
        return realizations != null && !realizations.isEmpty();
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuilder result = new StringBuilder(super.toString());
    result.append(" (name: ");
    result.append(name);
    result.append(')');
    return result.toString();
  }

} //SkillDefinitionImpl
