/*
 * generated by Xtext 2.21.0
 */
package org.xtext.mros.mros.ide.contentassist.antlr;

import com.google.common.collect.ImmutableMap;
import com.google.inject.Inject;
import com.google.inject.Singleton;
import java.util.Map;
import org.eclipse.xtext.AbstractElement;
import org.eclipse.xtext.ide.editor.contentassist.antlr.AbstractContentAssistParser;
import org.xtext.mros.mros.ide.contentassist.antlr.internal.InternalMROSParser;
import org.xtext.mros.mros.services.MROSGrammarAccess;

public class MROSParser extends AbstractContentAssistParser {

	@Singleton
	public static final class NameMappings {
		
		private final Map<AbstractElement, String> mappings;
		
		@Inject
		public NameMappings(MROSGrammarAccess grammarAccess) {
			ImmutableMap.Builder<AbstractElement, String> builder = ImmutableMap.builder();
			init(builder, grammarAccess);
			this.mappings = builder.build();
		}
		
		public String getRuleName(AbstractElement element) {
			return mappings.get(element);
		}
		
		private static void init(ImmutableMap.Builder<AbstractElement, String> builder, MROSGrammarAccess grammarAccess) {
			builder.put(grammarAccess.getResultTypeAccess().getAlternatives(), "rule__ResultType__Alternatives");
			builder.put(grammarAccess.getQualityAttributeAccess().getNameAlternatives_0(), "rule__QualityAttribute__NameAlternatives_0");
			builder.put(grammarAccess.getContextTypeAccess().getAlternatives(), "rule__ContextType__Alternatives");
			builder.put(grammarAccess.getModeAccess().getAlternatives(), "rule__Mode__Alternatives");
			builder.put(grammarAccess.getEnvironmentParameterAccess().getAlternatives(), "rule__EnvironmentParameter__Alternatives");
			builder.put(grammarAccess.getAbstractTypeAccess().getAlternatives(), "rule__AbstractType__Alternatives");
			builder.put(grammarAccess.getKEYWORDAccess().getAlternatives(), "rule__KEYWORD__Alternatives");
			builder.put(grammarAccess.getModelAccess().getGroup(), "rule__Model__Group__0");
			builder.put(grammarAccess.getSkillDefinitionAccess().getGroup(), "rule__SkillDefinition__Group__0");
			builder.put(grammarAccess.getSkillDefinitionAccess().getGroup_6(), "rule__SkillDefinition__Group_6__0");
			builder.put(grammarAccess.getSkillDefinitionAccess().getGroup_8(), "rule__SkillDefinition__Group_8__0");
			builder.put(grammarAccess.getSkillDefinitionAccess().getGroup_8_3(), "rule__SkillDefinition__Group_8_3__0");
			builder.put(grammarAccess.getSkillDefinitionAccess().getGroup_9(), "rule__SkillDefinition__Group_9__0");
			builder.put(grammarAccess.getSkillDefinitionAccess().getGroup_9_3(), "rule__SkillDefinition__Group_9_3__0");
			builder.put(grammarAccess.getSkillDefinitionAccess().getGroup_13(), "rule__SkillDefinition__Group_13__0");
			builder.put(grammarAccess.getSUCCESSAccess().getGroup(), "rule__SUCCESS__Group__0");
			builder.put(grammarAccess.getERRORAccess().getGroup(), "rule__ERROR__Group__0");
			builder.put(grammarAccess.getINPROGRESSAccess().getGroup(), "rule__INPROGRESS__Group__0");
			builder.put(grammarAccess.getSkillRealizationAccess().getGroup(), "rule__SkillRealization__Group__0");
			builder.put(grammarAccess.getSkillRealizationAccess().getGroup_4(), "rule__SkillRealization__Group_4__0");
			builder.put(grammarAccess.getSkillRealizationAccess().getGroup_5(), "rule__SkillRealization__Group_5__0");
			builder.put(grammarAccess.getSkillRealizationAccess().getGroup_5_3(), "rule__SkillRealization__Group_5_3__0");
			builder.put(grammarAccess.getContextAccess().getGroup(), "rule__Context__Group__0");
			builder.put(grammarAccess.getSystemModeAccess().getGroup(), "rule__SystemMode__Group__0");
			builder.put(grammarAccess.getSystemModeAccess().getGroup_4(), "rule__SystemMode__Group_4__0");
			builder.put(grammarAccess.getQualityModelAccess().getGroup(), "rule__QualityModel__Group__0");
			builder.put(grammarAccess.getQualityModelAccess().getGroup_3(), "rule__QualityModel__Group_3__0");
			builder.put(grammarAccess.getComponentAccess().getGroup(), "rule__Component__Group__0");
			builder.put(grammarAccess.getComponentAccess().getGroup_5(), "rule__Component__Group_5__0");
			builder.put(grammarAccess.getConfigurationAccess().getGroup(), "rule__Configuration__Group__0");
			builder.put(grammarAccess.getConfigurationAccess().getGroup_2(), "rule__Configuration__Group_2__0");
			builder.put(grammarAccess.getConfigurationAccess().getGroup_2_2(), "rule__Configuration__Group_2_2__0");
			builder.put(grammarAccess.getQualifiedModeAccess().getGroup(), "rule__QualifiedMode__Group__0");
			builder.put(grammarAccess.getQualifiedModeAccess().getGroup_1(), "rule__QualifiedMode__Group_1__0");
			builder.put(grammarAccess.getQualifiedNameAccess().getGroup(), "rule__QualifiedName__Group__0");
			builder.put(grammarAccess.getQualifiedNameAccess().getGroup_1(), "rule__QualifiedName__Group_1__0");
			builder.put(grammarAccess.getEnvironmentAccess().getGroup(), "rule__Environment__Group__0");
			builder.put(grammarAccess.getEnvironmentAccess().getGroup_4(), "rule__Environment__Group_4__0");
			builder.put(grammarAccess.getNarownessAccess().getGroup(), "rule__Narowness__Group__0");
			builder.put(grammarAccess.getClutternessAccess().getGroup(), "rule__Clutterness__Group__0");
			builder.put(grammarAccess.getParameterAccess().getGroup(), "rule__Parameter__Group__0");
			builder.put(grammarAccess.getDoubleAccess().getGroup(), "rule__Double__Group__0");
			builder.put(grammarAccess.getDoubleAccess().getGroup_2(), "rule__Double__Group_2__0");
			builder.put(grammarAccess.getActionTypeAccess().getGroup(), "rule__ActionType__Group__0");
			builder.put(grammarAccess.getActionTypeAccess().getGroup_3(), "rule__ActionType__Group_3__0");
			builder.put(grammarAccess.getActionTypeAccess().getGroup_4(), "rule__ActionType__Group_4__0");
			builder.put(grammarAccess.getActionTypeAccess().getGroup_5(), "rule__ActionType__Group_5__0");
			builder.put(grammarAccess.getActionAccess().getGroup(), "rule__Action__Group__0");
			builder.put(grammarAccess.getActionAccess().getGroup_11(), "rule__Action__Group_11__0");
			builder.put(grammarAccess.getMessageDefinitionAccess().getGroup(), "rule__MessageDefinition__Group__0");
			builder.put(grammarAccess.getMessageDefinitionAccess().getGroup_1(), "rule__MessageDefinition__Group_1__0");
			builder.put(grammarAccess.getMessageDefinitionAccess().getGroup_1_1(), "rule__MessageDefinition__Group_1_1__0");
			builder.put(grammarAccess.getParameterTypeAccess().getGroup(), "rule__ParameterType__Group__0");
			builder.put(grammarAccess.getModelAccess().getSkillDefinitionSetAssignment_2(), "rule__Model__SkillDefinitionSetAssignment_2");
			builder.put(grammarAccess.getSkillDefinitionAccess().getNameAssignment_1(), "rule__SkillDefinition__NameAssignment_1");
			builder.put(grammarAccess.getSkillDefinitionAccess().getListqaAssignment_5(), "rule__SkillDefinition__ListqaAssignment_5");
			builder.put(grammarAccess.getSkillDefinitionAccess().getListqaAssignment_6_1(), "rule__SkillDefinition__ListqaAssignment_6_1");
			builder.put(grammarAccess.getSkillDefinitionAccess().getPAssignment_8_2(), "rule__SkillDefinition__PAssignment_8_2");
			builder.put(grammarAccess.getSkillDefinitionAccess().getPAssignment_8_3_1(), "rule__SkillDefinition__PAssignment_8_3_1");
			builder.put(grammarAccess.getSkillDefinitionAccess().getPAssignment_9_2(), "rule__SkillDefinition__PAssignment_9_2");
			builder.put(grammarAccess.getSkillDefinitionAccess().getPAssignment_9_3_1(), "rule__SkillDefinition__PAssignment_9_3_1");
			builder.put(grammarAccess.getSkillDefinitionAccess().getResultAssignment_12(), "rule__SkillDefinition__ResultAssignment_12");
			builder.put(grammarAccess.getSkillDefinitionAccess().getResultAssignment_13_1(), "rule__SkillDefinition__ResultAssignment_13_1");
			builder.put(grammarAccess.getSkillDefinitionAccess().getRealizationsAssignment_15(), "rule__SkillDefinition__RealizationsAssignment_15");
			builder.put(grammarAccess.getSUCCESSAccess().getValueAssignment_2(), "rule__SUCCESS__ValueAssignment_2");
			builder.put(grammarAccess.getSUCCESSAccess().getValueAssignment_3(), "rule__SUCCESS__ValueAssignment_3");
			builder.put(grammarAccess.getERRORAccess().getValueAssignment_2(), "rule__ERROR__ValueAssignment_2");
			builder.put(grammarAccess.getERRORAccess().getValueAssignment_3(), "rule__ERROR__ValueAssignment_3");
			builder.put(grammarAccess.getINPROGRESSAccess().getValueAssignment_2(), "rule__INPROGRESS__ValueAssignment_2");
			builder.put(grammarAccess.getINPROGRESSAccess().getValueAssignment_3(), "rule__INPROGRESS__ValueAssignment_3");
			builder.put(grammarAccess.getQualityAttributeAccess().getNameAssignment(), "rule__QualityAttribute__NameAssignment");
			builder.put(grammarAccess.getSkillRealizationAccess().getNameAssignment_1(), "rule__SkillRealization__NameAssignment_1");
			builder.put(grammarAccess.getSkillRealizationAccess().getCAssignment_3(), "rule__SkillRealization__CAssignment_3");
			builder.put(grammarAccess.getSkillRealizationAccess().getCAssignment_4_1(), "rule__SkillRealization__CAssignment_4_1");
			builder.put(grammarAccess.getSkillRealizationAccess().getQAssignment_5_2(), "rule__SkillRealization__QAssignment_5_2");
			builder.put(grammarAccess.getSkillRealizationAccess().getQAssignment_5_3_1(), "rule__SkillRealization__QAssignment_5_3_1");
			builder.put(grammarAccess.getSkillRealizationAccess().getContextAssignment_6(), "rule__SkillRealization__ContextAssignment_6");
			builder.put(grammarAccess.getContextAccess().getTypeAssignment_1(), "rule__Context__TypeAssignment_1");
			builder.put(grammarAccess.getSystemModeAccess().getNameAssignment_1(), "rule__SystemMode__NameAssignment_1");
			builder.put(grammarAccess.getSystemModeAccess().getCAssignment_3(), "rule__SystemMode__CAssignment_3");
			builder.put(grammarAccess.getSystemModeAccess().getCAssignment_4_1(), "rule__SystemMode__CAssignment_4_1");
			builder.put(grammarAccess.getQualityModelAccess().getQaAssignment_0(), "rule__QualityModel__QaAssignment_0");
			builder.put(grammarAccess.getQualityModelAccess().getQvalueAssignment_2(), "rule__QualityModel__QvalueAssignment_2");
			builder.put(grammarAccess.getQualityModelAccess().getEAssignment_3_1(), "rule__QualityModel__EAssignment_3_1");
			builder.put(grammarAccess.getComponentAccess().getNameAssignment_1(), "rule__Component__NameAssignment_1");
			builder.put(grammarAccess.getComponentAccess().getObservableAssignment_2(), "rule__Component__ObservableAssignment_2");
			builder.put(grammarAccess.getComponentAccess().getPAssignment_4(), "rule__Component__PAssignment_4");
			builder.put(grammarAccess.getComponentAccess().getPAssignment_5_1(), "rule__Component__PAssignment_5_1");
			builder.put(grammarAccess.getConfigurationAccess().getNameAssignment_1(), "rule__Configuration__NameAssignment_1");
			builder.put(grammarAccess.getConfigurationAccess().getPAssignment_2_1(), "rule__Configuration__PAssignment_2_1");
			builder.put(grammarAccess.getConfigurationAccess().getPAssignment_2_2_1(), "rule__Configuration__PAssignment_2_2_1");
			builder.put(grammarAccess.getEnvironmentAccess().getNameAssignment_1(), "rule__Environment__NameAssignment_1");
			builder.put(grammarAccess.getEnvironmentAccess().getParameterlistAssignment_3(), "rule__Environment__ParameterlistAssignment_3");
			builder.put(grammarAccess.getEnvironmentAccess().getParameterlistAssignment_4_1(), "rule__Environment__ParameterlistAssignment_4_1");
			builder.put(grammarAccess.getNarownessAccess().getValueAssignment_1(), "rule__Narowness__ValueAssignment_1");
			builder.put(grammarAccess.getClutternessAccess().getValueAssignment_1(), "rule__Clutterness__ValueAssignment_1");
			builder.put(grammarAccess.getParameterAccess().getNameAssignment_0(), "rule__Parameter__NameAssignment_0");
			builder.put(grammarAccess.getParameterAccess().getValueAssignment_2(), "rule__Parameter__ValueAssignment_2");
			builder.put(grammarAccess.getParameterAccess().getValueAssignment_3(), "rule__Parameter__ValueAssignment_3");
			builder.put(grammarAccess.getActionTypeAccess().getNameAssignment_1(), "rule__ActionType__NameAssignment_1");
			builder.put(grammarAccess.getActionTypeAccess().getGoalAssignment_3_1(), "rule__ActionType__GoalAssignment_3_1");
			builder.put(grammarAccess.getActionTypeAccess().getResultAssignment_4_1(), "rule__ActionType__ResultAssignment_4_1");
			builder.put(grammarAccess.getActionTypeAccess().getFeedbackAssignment_5_1(), "rule__ActionType__FeedbackAssignment_5_1");
			builder.put(grammarAccess.getGoalDefinitionAccess().getGoalAssignment(), "rule__GoalDefinition__GoalAssignment");
			builder.put(grammarAccess.getResultDefinitionAccess().getResultAssignment(), "rule__ResultDefinition__ResultAssignment");
			builder.put(grammarAccess.getFeedbackAccess().getFeedbackAssignment(), "rule__Feedback__FeedbackAssignment");
			builder.put(grammarAccess.getActionAccess().getNameAssignment_1(), "rule__Action__NameAssignment_1");
			builder.put(grammarAccess.getActionAccess().getIAssignment_3(), "rule__Action__IAssignment_3");
			builder.put(grammarAccess.getActionAccess().getAtAssignment_6(), "rule__Action__AtAssignment_6");
			builder.put(grammarAccess.getActionAccess().getQAssignment_10(), "rule__Action__QAssignment_10");
			builder.put(grammarAccess.getActionAccess().getQAssignment_11_1(), "rule__Action__QAssignment_11_1");
			builder.put(grammarAccess.getMessageDefinitionAccess().getMessagePartAssignment_1_0(), "rule__MessageDefinition__MessagePartAssignment_1_0");
			builder.put(grammarAccess.getMessageDefinitionAccess().getMessagePartAssignment_1_1_1(), "rule__MessageDefinition__MessagePartAssignment_1_1_1");
			builder.put(grammarAccess.getMessagePartAccess().getPAssignment(), "rule__MessagePart__PAssignment");
			builder.put(grammarAccess.getParameterTypeAccess().getNameAssignment_0(), "rule__ParameterType__NameAssignment_0");
			builder.put(grammarAccess.getParameterTypeAccess().getValueAssignment_2(), "rule__ParameterType__ValueAssignment_2");
		}
	}
	
	@Inject
	private NameMappings nameMappings;

	@Inject
	private MROSGrammarAccess grammarAccess;

	@Override
	protected InternalMROSParser createParser() {
		InternalMROSParser result = new InternalMROSParser(null);
		result.setGrammarAccess(grammarAccess);
		return result;
	}

	@Override
	protected String getRuleName(AbstractElement element) {
		return nameMappings.getRuleName(element);
	}

	@Override
	protected String[] getInitialHiddenTokens() {
		return new String[] { "RULE_WS", "RULE_ML_COMMENT", "RULE_SL_COMMENT" };
	}

	public MROSGrammarAccess getGrammarAccess() {
		return this.grammarAccess;
	}

	public void setGrammarAccess(MROSGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}
	
	public NameMappings getNameMappings() {
		return nameMappings;
	}
	
	public void setNameMappings(NameMappings nameMappings) {
		this.nameMappings = nameMappings;
	}
}
